---
import Hero from "@components/Hero.astro";
import Layout from "@layouts/Layout.astro";
import type { CollectionEntry } from "astro:content";
import { slugifyStr } from "@utils/slugify";
import ContentBodyLayout from "@layouts/ContentBodyLayout.astro";
import { SITE } from "@config";
import "@styles/markdown.css";

export interface Props {
  post: CollectionEntry<"blog">;
}

const { post }: Props = Astro.props;

const {
  title,
  author,
  description,
  ogImage,
  canonicalURL,
  pubDate,
  modDate,
  tags,
} = post.data;

const ogImageUrl = typeof ogImage === "string" ? ogImage : ogImage?.src;
const ogUrl = new URL(
  ogImageUrl ?? `/posts/${slugifyStr(title)}.png`,
  Astro.url.origin
).href;

const layoutProps = {
  title: `${title} | ${SITE.title}`,
  author,
  description,
  pubDate,
  modDate,
  canonicalURL,
  ogImage: ogUrl,
  scrollSmooth: true,
};

const { Content } = await post.render();
---

<Layout {...layoutProps}>
  <Hero slot="hero" title={title} color={post.data.color}>
    <div slot="date" class="date">
      <relative-time
        class="text-transform: uppercase font-semibold text-xs text-stone-300"
        format="datetime"
        datetime={pubDate}
        format-style="short"
        year="numeric"></relative-time>
    </div>

    <p class="text-stone-100 w-5/6 m-0" slot="description">
      <em>{description}</em>
    </p>
  </Hero>

  <ContentBodyLayout>
    <Content />
  </ContentBodyLayout>
</Layout>

<script is:inline>
  /** Create a progress indicator
   *  at the top */
  function createProgressBar() {
    // Create the main container div
    const progressContainer = document.createElement("div");
    progressContainer.className =
      "progress-container fixed top-0 z-10 h-1 w-full bg-transparent";

    // Create the progress bar div
    const progressBar = document.createElement("div");
    progressBar.className = "progress-bar h-1 w-0 bg-secondary";
    progressBar.id = "myBar";

    // Append the progress bar to the progress container
    progressContainer.appendChild(progressBar);

    // Append the progress container to the document body or any other desired parent element
    document.body.appendChild(progressContainer);
  }
  createProgressBar();

  /** Update the progress bar
   *  when user scrolls */
  function updateScrollProgress() {
    const winScroll =
      document.body.scrollTop || document.documentElement.scrollTop;
    const height =
      document.documentElement.scrollHeight -
      document.documentElement.clientHeight;
    const scrolled = (winScroll / height) * 100;
    if (document) {
      const myBar = document.getElementById("myBar");
      if (myBar) {
        myBar.style.width = scrolled + "%";
      }
    }
  }
  document.addEventListener("scroll", updateScrollProgress);
</script>
